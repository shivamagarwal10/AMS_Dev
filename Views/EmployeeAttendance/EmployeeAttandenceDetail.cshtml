@model PagedList.IPagedList<EmployeeAttendenceMangement.Models.EmployeeAttandenceModel>

@using PagedList.Mvc;
@{
    ViewBag.Title = "EmpAttendanceDetail";
}
<style>
    h3 {
        padding: 10px;
    }

    table, th, td {
        border: 1px solid black;
        margin-left: Auto;
        margin-right: Auto;
        table-layout: fixed;
        text-align: center;
    }

        table.table {
            border-collapse: collapse;
        }

    .cell-breakWord {
        word-wrap: break-word;
    }

    th {
        background-color: #b8b894;
        width: 10%;
    }

    tr {
        background-color: #e1e1d0;
        width: 10%;
    }
</style>

<h3>  Employee Attendance Detail </h3>



@if ( Convert.ToDateTime(Session["Date"])!= @DateTime.Today.Date)
{
    <p>
        <button type="submit" class="btn-btn-primary">@Html.ActionLink("Create New", "CreateAttandence", "EmployeeAttendance")</button>
    </p>
}
else
{
   
}
<table class="table">
    <tr>

        <th>
            Employee Name
        </th>
        @*<th>
                    Project Name
            </th>*@
        <th>
            Date
        </th>
        <th>
            Duration
        </th>
        <th>
            Intime
        </th>
        <th>
            Out Time
        </th>
        <th>
            Latitude
        </th>
        <th>
            Longitude
        </th>

        <th>
            Action
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>

            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Duration)
            </td>
            <td>
                @if (item.Intime != null)
                {
                    @Html.DisplayFor(modelItem => item.Intime).ToString().Substring(0, 5)
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.Intime)
                }
            </td>

            <td>
                @if (item.OutTime != null)
                {
                    @Html.DisplayFor(modelItem => item.OutTime).ToString().Substring(0, 5)
                }
                else
                {
                    @Html.DisplayFor(modelItem => item.OutTime)
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.latitude)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.longitude)
            </td>

            <td>
                @if (item.Duration == "" & Convert.ToBoolean(Session["Is_admin"]) == false)
                {
                    @Html.ActionLink("Edit", "UpdateAttendance", new { EmpAtendenceId = item.EmpAtendenceId })
                }
                else
                {
                    if (Convert.ToBoolean(Session["Is_admin"]) == true)
                    {
                        @Html.ActionLink("Edit ||  ", "UpdateAttendance", new { EmpAtendenceId = item.EmpAtendenceId })

                        @Html.ActionLink("Delete", "EmpAttendanceDelete", new { EmpAtendenceId = item.EmpAtendenceId }, new { onclick = "return confirm ('Are sure wants to delete?');" })
                    }
                    else
                    {

                    }
                }

            </td>
        </tr>
    }

</table>

@using (Html.BeginForm("EmployeeAttandenceDetail", "EmployeeAttendance", FormMethod.Get, new { id = "form1" }))

{
    <div id='Paging' style="padding-left:450px">

        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
        of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("EmployeeAttandenceDetail", new { page, pageSize = ViewBag.psize }))
    </div>
}


@model EmployeeAttendenceMangement.Models.EmployeeProjectMapping

<div class="header">


    <h1>Project Employee Mapping </h1>
    <br />

</div>


<style>
    div.header {
        background-color: black;
    }
    body {
        background-color: #fcfafa;
    }
    .form-horizontal {
        overflow: hidden;
    }
    
    h1 {
        color: white;
        text-align: center;
        margin-top: 18px;

    }
</style>
@using (Html.BeginForm("Project_EmployeeMapping", "EmployeeProjectMapping", FormMethod.Post))
{
    <br />
    <br />

    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "ModelOnly", new { @class = "text-danger" })
    <div class="form-group">
        @Html.HiddenFor(model => model.Emp_Project_Mapping_Id)
        @Html.Label("Project Name", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-offset-4">

            @Html.DropDownList("Project_Id", new SelectList(ViewBag.ProjectLists, "Project_Id", "ProjectName"), "---Select Project Name---", htmlAttributes: new { @class = "form-control", @style = "width:460px ;height:45px;", Id = "Pid", required = "required" })

            @Html.ValidationMessageFor(model => model.Project_Id, "", new { @class = "text-danger" })

        </div>

    </div>
        <div class="form-group">
            @Html.Label("Employee Name", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-offset-4">

                @Html.DropDownListFor(model => model.Employee_Id, new SelectList(""), " ---Select Employee Name ---", htmlAttributes: new { @class = "form-control", @style = "width:460px; ;height:45px;", Id = "EmpId", required = "required" })


                @*@Html.DropDownListFor(model => model.Employee_Id, new SelectList(ViewBag.CountryList1, "StateId", "StateName"), "---Select State Name ---", htmlAttributes: new { @class = "form-control", @style = "width:260px", Id = "St", required = "required" })*@


                @Html.ValidationMessageFor(model => model.Employee_Id, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-4 col-md-10">
                <input type="submit" value="save" class="btn btn-success" />
            </div>
        </div>
    </div>
}


<script type="text/javascript">
    $(function () {
        $("#Pid").change(function () {
            var id = $(this).val();
            debugger;
            $("#EmpId").empty();
            $.get("/EmployeeProjectMapping/GetEmployeeName", { ProjectCode: $("#Pid").val() }, function (data) {
                debugger;
                var v = "<option>---Select---</option>";
                $.each(data, function (i, v1) {
                    v += "<option value=" + v1.Value + ">" + v1.Text + "</option>";


                });
                $("#EmpId").html(v);
            })
        });

    });
</script>
